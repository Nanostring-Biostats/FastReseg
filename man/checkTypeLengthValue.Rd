% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_spatial_networks.R
\name{checkTypeLengthValue}
\alias{checkTypeLengthValue}
\title{checking whether a single value in config have correct data type, length and value range}
\usage{
checkTypeLengthValue(
  config,
  name,
  expect_type,
  expect_len = NULL,
  expect_range = c("equal", "larger", "smaller", "within"),
  expect_value = NULL
)
}
\arguments{
\item{config}{the list storing config}

\item{name}{parameter name in config list}

\item{expect_type}{expected data type for vector, e.g. c("numeric","integer") for integer values, "character", "logical", etc}

\item{expect_len}{expected length, NULL for any length}

\item{expect_range}{expect value range; use "larger","smaller", "equal", "within" for numeric values, but use only "within" for character}

\item{expect_value}{a single numeric value or a character vector that would be used to check against with expect_range, NULL for any value}
}
\value{
a message if config[\link{name}] does not satisfy the criteria
}
\description{
checking whether a single value in config have correct data type, length and value range
}
\examples{
config <- list(pos_Integer = 1, neg_value = -0.2, flag = TRUE, 
length2character = c("a","b"))
# check if positive integer of any length
checkTypeLengthValue(config, "pos_Integer", 
                     expect_type = c("numeric","integer"), 
                     expect_range = "larger", expect_value = 0)
# check if negative value of any length
checkTypeLengthValue(config, "neg_value", 
                     expect_type = "numeric", 
                     expect_range = "smaller", expect_value = 0)
# check if logical value
checkTypeLengthValue(config, "flag", expect_type = "logical")
# check if character has 2 elements within c("a","b")
checkTypeLengthValue(config, "length2character", 
                     expect_type = "character", expect_len = 2,
                     expect_range = "within", expect_value = c("a","b"))
}
