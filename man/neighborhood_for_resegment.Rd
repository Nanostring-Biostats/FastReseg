% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/neighborhood.R
\name{neighborhood_for_resegment}
\alias{neighborhood_for_resegment}
\title{neighborhood_for_resegment}
\usage{
neighborhood_for_resegment(
  chosen_cells = NULL,
  score_GeneMatrix,
  score_baseline = NULL,
  cell_networkDT = NULL,
  network_cellID_split = "_g",
  config_spatNW_transcript,
  neighbor_distance_xy = NULL,
  neighbor_distance_z = NULL,
  distance_cutoff = "auto",
  transNum_cutoff = 4,
  transcript_df,
  cellID_coln = "CellId",
  celltype_coln = "cell_type",
  transID_coln = "transcript_id",
  transGene_coln = "target",
  transSpatLocs_coln = c("x", "y", "z"),
  gridSpat_coln = c("fov", "slide")
)
}
\arguments{
\item{chosen_cells}{the cell_ID of chosen cells need to be evaluate for re-segmentation}

\item{score_GeneMatrix}{the gene x cell-type matrix of log-like score of gene in each cell type}

\item{score_baseline}{a named vector of score baseline for all cell type listed in score_GeneMatrix}

\item{cell_networkDT}{the data.table component of cell-level delaunay network object, would be used for neighborhood search if neighbor_distance_xy is NULL.}

\item{network_cellID_split}{the deliminator used to convert cellID_coln in transcript_df to the cell ID in cell_networkDT}

\item{config_spatNW_transcript}{configuration list to create spatial network at transcript level}

\item{neighbor_distance_xy}{the distance in x, y from the outermost transcripts of each chosen cell to the furthest non-self transcripts for neighborhood network building at transcript level. Default = NULL to use the cell network for selection of neighborhood.}

\item{neighbor_distance_z}{the distance in z direction from the outermost transcripts of each chosen cell to the furthest non-self transcripts for neighborhood network building at transcript level. Default = NULL to use the cell network for selection of neighborhood.}

\item{distance_cutoff}{maximum distance within connected transcript group (default = "auto").}

\item{transNum_cutoff}{minimal number of transcripts in query cell and its neighborhood for delaunay network analysis (default = 4).}

\item{transcript_df}{the data.frame with transcript_id, target/geneName, x, y and cell_id}

\item{cellID_coln}{the column name of cell_ID in transcript_df}

\item{celltype_coln}{the column name of cell_type in transcript_df}

\item{transID_coln}{the column name of transcript_ID in transcript_df}

\item{transGene_coln}{the column name of target or gene name in transcript_df}

\item{transSpatLocs_coln}{the column name of 1st, 2nd, optional 3rd spatial dimension of each transcript in transcript_df}

\item{gridSpat_coln}{an optional vector of column names in transcript_df that could act as grid to separate different transcripts in space, such as columns for FOV, slideID when using direct distance threshold to define neighborhood search range.}
}
\value{
a data.frame
#' \enumerate{
\item{CellId, original cell id of chosen cells}
\item{cell_type, original cell type of chosen cells}
\item{transcript_num, number of transcripts in chosen cells}
\item{self_celltype, cell type give maximum score for query cell only}
\item{score_under_self, score in query cell under its own maximum celltype}
\item{neighbor_CellId, cell id of neighbor cell whose cell type gives maximum score in query cell among all neighbors, not including query cell itself}
\item{neighbor_celltype, cell type that gives maximum score in query cell among all non-self neighbor cells}
\item{score_under_neighbor, score in query cell under neighbor_celltype}
}
}
\description{
find neighbor cells with transcripts that are direct neighbor of chosen_cell, check tLLRv2 score under neighbor cell type, return neighborhood information
}
\details{
If no neighbor cells found for query cell, use the cell id and cell type of query cell to fill in the columns for neighbor cells in returned data.frame
}
