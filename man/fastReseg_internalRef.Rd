% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wrapper_FastReseg.R
\name{fastReseg_internalRef}
\alias{fastReseg_internalRef}
\title{fastReseg_internalRef}
\usage{
fastReseg_internalRef(
  counts,
  clust,
  refProfiles = NULL,
  transDF_fileInfo = NULL,
  filepath_coln = "file_path",
  prefix_colns = c("slide", "fov"),
  fovOffset_colns = c("stage_X", "stage_Y"),
  pixel_size = 0.18,
  zstep_size = 0.8,
  transcript_df = NULL,
  transID_coln = NULL,
  transGene_coln = "target",
  cellID_coln = "CellId",
  spatLocs_colns = c("x", "y", "z"),
  extracellular_cellID = NULL,
  flagModel_TransNum_cutoff = 50,
  flagCell_lrtest_cutoff = 5,
  svmClass_score_cutoff = -2,
  svm_args = list(kernel = "radial", scale = FALSE, gamma = 0.4),
  molecular_distance_cutoff = NULL,
  cellular_distance_cutoff = NULL,
  score_baseline = NULL,
  lowerCutoff_transNum = NULL,
  higherCutoff_transNum = NULL,
  leiden_args = list(python_path = "/usr/bin/python3", partition_type =
    c("RBConfigurationVertexPartition", "ModularityVertexPartition"), resolution = 1,
    n_iterations = 1000, set_seed = T, seed_number = 1234),
  flagMerge_sharedLeiden_cutoff = 0.5,
  path_to_output = "reSeg_res",
  save_intermediates = TRUE,
  return_perCellData = TRUE
)
}
\arguments{
\item{counts}{Counts matrix for entire dataset, cells * genes.}

\item{clust}{Vector of cluster assignments for each cell in \code{counts}, when NULL to automatically assign the cell cluster for each cell based on maximum transcript score of given the profiled \code{refProfiles}}

\item{refProfiles}{A matrix of cluster profiles, genes * clusters, default = NULL to use external cluster assignments}

\item{prefix_colns}{the column names of annotation in \code{transDF_fov_fileInfo}, to be added to the CellId as prefix when creating unique cell_ID for entire dataset; set to NULL if use the original \code{transID_coln} or \code{cellID_coln}}

\item{fovOffset_colns}{the column name of coordinate offsets in 1st and 2nd dimension for each per FOV transcript data.frame in \code{transDF_fileInfo}, unit in micrometer}

\item{pixel_size}{the micrometer size of image pixel listed in 1st and 2nd dimension of \code{spatLocs_colns} of each \code{transcript_df}}

\item{zstep_size}{the micrometer size of z-step for the optional 3rd dimension of \code{spatLocs_colns} of each \code{transcript_df}}

\item{transcript_df}{the data.frame of transcript level information with unique CellId, default = NULL to read from the \code{transDF_fov_fileInfo}}

\item{transID_coln}{the column name of transcript_ID in \code{transcript_df}, default = NULL to use row index of transcript in each \code{transcript_df}; when \code{prefix_colns} != NULL, unique transcript_id would be generated from \code{prefix_colns} and \code{transID_coln} in each \code{transcript_df}}

\item{transGene_coln}{the column name of target or gene name in \code{transcript_df}}

\item{cellID_coln}{the column name of cell_ID in \code{transcript_df}; when \code{prefix_colns} != NULL, unique cell_ID would be generated from \code{prefix_colns} and \code{cellID_coln} in each \code{transcript_df}}

\item{spatLocs_colns}{column names for 1st, 2nd and optional 3rd dimension of spatial coordinates in \code{transcript_df}}

\item{extracellular_cellID}{a vector of cell_ID for extracellular transcripts which would be removed from the resegmention pipeline (default = NULL)}

\item{flagModel_TransNum_cutoff}{the cutoff of transcript number to do spatial modeling for identification of wrongly segmented cells (default = 50)}

\item{flagCell_lrtest_cutoff}{the cutoff of lrtest_-log10P to identify putative wrongly segemented cells with strong spatial dependency in transcript score profile}

\item{svmClass_score_cutoff}{the cutoff of transcript score to separate between high and low score transcripts in SVM (default = -2)}

\item{svm_args}{a list of arguments to pass to svm function for identifying low-score transcript groups in space, typically involve kernel, gamma, scale}

\item{molecular_distance_cutoff}{maximum molecule-to-molecule distance within connected transcript group, same unit as input spatial coordinate (default = 2.7 micron).
If set to NULL, the pipeline would first randomly choose no more than 2500 cells from up to 10 random picked ROIs with search radius to be 5 times of \code{cellular_distance_cutoff}, and then calculate the minimal molecular distance between picked cells. The pipeline would further use the 10 times of 90\% quantile of minimal molecular distance as \code{molecular_distance_cutoff}. This calculation is slow and is not recommended for large transcript data.frame.}

\item{cellular_distance_cutoff}{maximum cell-to-cell distance in x, y between the center of query cells to the center of neighbor cells with direct contact, same unit as input spatial coordinate. Default = NULL to use the 2 times of average 2D cell diameter.}

\item{score_baseline}{a named vector of score baseline under each cell type listed in \code{refProfiles} such that  per cell transcript score higher than the baseline is required to call a cell type of high enough confidence}

\item{lowerCutoff_transNum}{a named vector of transcript number cutoff under each cell type such that higher than the cutoff is required to keep query cell as it is}

\item{higherCutoff_transNum}{a named vector of transcript number cutoff under each cell type such that lower than the cutoff is required to keep query cell as it is when there is neighbor cell of consistent cell type.}

\item{leiden_args}{a list of arguments to pass to reticulate and Giotto:::python_leiden function, including python path, resolution, partition_type, n_iterations, set_seed, seed_number.}

\item{flagMerge_sharedLeiden_cutoff}{minimal percentage of transcripts shared membership between query cell and neighbor cells in leiden clustering results for a valid merging event, default = 0.5 for 50\% cutoff}

\item{path_to_output}{the file path to output folder where the resegmentation data is saved; directory would be created by function if not exists; transcript data.frame \code{updated_transDF} is saved as individual csv files for each FOV, where cell data of all FOVs, \code{updated_perCellDT} and \code{updated_perCellExprs}, are combined to save as .RData object.}

\item{save_intermediates}{flag to save intermediate outputs into output folder, including data.frame for spatial modeling statistics of each cell,}

\item{return_perCellData}{flag to return and save to output folder for gene x cell count matrix and per cell DF with updated mean spatial coordinates and new cell type}

\item{transDF_fov_fileInfo}{a data.frame with each row for each individual file of per FOV transcript data.frame within which the coordinates and CellId are unique, columns include the file path of per FOV transcript data.frame file, annotation columns like slide and fov to be used as prefix when creating unique cell_ID across entire dataset; when NULL, use the provided \code{transcript_df} directly}

\item{filepath_fov_coln}{the column name of each individual file of per FOV transcript data.frame in \code{transDF_fileInfo}}
}
\value{
a list
\enumerate{
\item{refProfiles, a genes * clusters matrix of cluster-specific reference profiles used in resegmenation pipeline}
\item{cutoffs_list, a list of cutoffs used in resegmentation pipeline, including, \code{score_baseline}, \code{lowerCutoff_transNum}, \code{highCutoff_transNum}, \code{cellular_distance_cutoff}, \code{molecular_distance_cutoff}}
\item{updated_perCellDT, a per cell data.table with mean sptial coordinates and new cell type after resegmentation, return when return_perCellData = TRUE}
\item{updated_perCellExprs, a gene x cell count table for updated transcript data.frame after resegmentation, return when return_perCellData = TRUE}
\item{reseg_actions, a list of 4 elements describing how the resegmenation would be performed on original \code{transcript_df} by the group assignment of transcripts listed in \code{groupDF_ToFlagTrans}, output of \code{decide_ReSegment_Operations_leidenCut} function, save when save_intermediates = TRUE}
}
}
\description{
wrapper for resegmentation pipeline using internal reference profiles and cutoffs.
}
\details{
The pipeline would first estimate mean profile for each cell cluster based on the provided cell x gene count matrix and cluster assignment for entire data set.
And then, the pipeline would use the estimated cluster-specific profile as reference profiles and calculate suitable cutoff for distance search, transcript number and score in first provided per FOV transcript data frame when those cutoffs are not provided.
When transcript data.frame is provided as a list of file path, the pipeline would further perform resegmentation on individual transcript data.frame using the baseline and cutoff defined globally.
For each transcript data.frame, the pipeline would score each transcript based on the provided cell type-specific reference profiles, evaluate the goodness-of-fit of each transcript within original cell segment,
identify the low-score transcript groups within cells that has strong spatial dependency in transcript score profile,
evaluate the neighborhood environment of low-score transcript groups and perform resegmentation actions including triming to extracellular space, merging to neighbor cell or labeling as new cell.
The pipeline would save the each per FOV output as individual file in \code{path_to_output} directory; \code{updated_transDF} would be saved as csv file.
When save_intermediates = TRUE, all intermediate files and resegmenation outputs of each FOV would be saved as single .RData object in 1 list object \code{each_segRes} containing the following elements:
\itemize{
\item{modStats_ToFlagCells, a data.frame for spatial modeling statistics of each cell, output of \code{spatialModelScoreCell_hyperplane} function, save when save_intermediates = TRUE}
\item{groupDF_ToFlagTrans, data.frame for the group assignment of transcripts within putative wrongly segmented cells, merged output of \code{flagTranscripts_SVM} and \code{groupTranscripts_Delanuay} functions, save when save_intermediates = TRUE}
\item{neighborhoodDF_ToReseg, a data.frame for neighborhood enviornment of low-score transcript groups, output of \code{neighborhood_for_resegment_spatstat} function, save when save_intermediates = TRUE}
\item{reseg_actions, a list of 4 elements describing how the resegmenation would be performed on original \code{transcript_df} by the group assignment of transcripts listed in \code{groupDF_ToFlagTrans}, output of \code{decide_ReSegment_Operations_leidenCut} function, save when save_intermediates = TRUE}
\item{updated_transDF, the updated transcript_df with \code{updated_cellID} and \code{updated_celltype} column based on reseg_full_converter}
\item{updated_perCellDT, a per cell data.table with mean sptial coordinates and new cell type after resegmentation, return when return_perCellData = TRUE}
\item{updated_perCellExprs, a gene x cell count table for updated transcript data.frame after resegmentation, return when return_perCellData = TRUE}
}
The pipeline would also combine per cell data for all FOVs, save and return the combined data when return_perCellData = TRUE; \code{updated_perCellDT} and \code{updated_perCellExprs} would be save as single .RData object in \code{path_to_output} directory.
\itemize{
\item{updated_perCellDT, a per cell data.table with mean sptial coordinates and new cell type after resegmentation, return when return_perCellData = TRUE}
\item{updated_perCellExprs, a gene x cell count table for updated transcript data.frame after resegmentation, return when return_perCellData = TRUE}
}
}
\examples{

}
